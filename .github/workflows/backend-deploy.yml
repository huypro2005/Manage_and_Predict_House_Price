name: Deploy Backend

on:
  push:
    branches: [ "main" ]
    paths: ['backendWeb/**'] # Only run backend 
  pull_request:
    branches: [ "main" ]
    paths: ['backendWeb/**']
  workflow_dispatch: {}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4

    # Rsynce toàn bộ backend to EC2
    - name: Upload backend to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "backendWeb/**"
        target: "/var/www/myapp/backendWeb"





    # ghi / cập nhật file env cho systemd service + migrate + restart
    - name: Configure env & restart
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_SSH_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          set -e
          # 1) Ghi /etc/myapp.env từ secrets (không echo ra log)
          sudo bash -c 'cat > /etc/myapp.env' << "EOF"
          DJANGO_SETTINGS_MODULE=backendWeb.settings
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG=0
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}

          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}

          HOST_REDIS=${{ secrets.HOST_REDIS }}
          PORT_REDIS=${{ secrets.PORT_REDIS }}
          USERNAME_REDIS=${{ secrets.USERNAME_REDIS }}
          PASSWORD_REDIS=${{ secrets.PASSWORD_REDIS }}

          MAPBOX_TOKEN=${{ secrets.MAPBOX_TOKEN }}
          # Nếu bạn lưu NỘI DUNG JSON của Firebase vào secret:
          FIREBASE_CREDENTIALS=${{ secrets.PATH_FIREBASE_ACCOUNT }}
          EOF
          sudo chmod 600 /etc/myapp.env

          # 2) tạo venv 3.13 nếu chưa có, cài deps
          test -d /var/www/myapp/venv || python3.13 -m venv /var/www/myapp/venv
          source /var/www/myapp/venv/bin/activate
          python -m pip install -U pip wheel
          pip install -r /var/www/myapp/backendWeb/requirements.txt

          # 3) migrate + collectstatic
          cd /var/www/myapp/backendWeb
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput || true

          # 4) restart backend
          sudo systemctl restart myapp-backend
